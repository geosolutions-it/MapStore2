<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"

	   xmlns:cxf="http://cxf.apache.org/core"
	   xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"

       xsi:schemaLocation="
            http://www.springframework.org/schema/beans     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://cxf.apache.org/jaxws                     http://cxf.apache.org/schemas/jaxws.xsd
            http://cxf.apache.org/jaxrs                     http://cxf.apache.org/schemas/jaxrs.xsd
            http://cxf.apache.org/core                      http://cxf.apache.org/schemas/core.xsd
            http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context-3.0.xsd"
       default-autowire="byName">

    <context:annotation-config />

    <bean id="mapPrinter" class="org.mapfish.print.MapPrinter" scope="prototype"></bean>
	<bean id="configFactory" class="org.mapfish.print.config.ConfigFactory"></bean>
    
    <bean id="geostoreInitializer" class="it.geosolutions.geostore.init.GeoStoreInit" lazy-init="false">
        <!-- Site specific initialization. Please specify a path in the ovr file-->
        <!--<property name="userListInitFile"><null/></property>-->
        <property name="userListInitFile" value="classpath:sample_users.xml"/>
        <!-- Site specific initialization. Please specify a path in the ovr file-->
        <property name="categoryListInitFile" value="classpath:sample_categories.xml" />

        <!-- Site specific initialization. Please specify a path in the ovr file-->
        <property name="userGroupListInitFile" value="classpath:sample_groups.xml" />
        <!-- The default password encoder -->
        <property name="passwordEncoder" ref="${passwordEncoderUsed}"></property>	
        
        
    </bean>
      
      <!-- Define MapReaderFactories -->
    <bean id="mapReaderFactoryFinder" class="org.mapfish.print.map.readers.MapReaderFactoryFinder"/>
    <bean id="wms-MapReaderFactory" class="org.mapfish.print.map.readers.WMSMapReader$Factory"/>
    <bean id="mapServer-MapReaderFactory" class="org.mapfish.print.map.readers.MapServerMapReader$Factory"/>
    <bean id="tileCache-MapReaderFactory" class="org.mapfish.print.map.readers.TileCacheMapReader$Factory"/>
    <bean id="osm-MapReaderFactory" class="org.mapfish.print.map.readers.OsmMapReader$Factory"/>
    <bean id="xyz-MapReaderFactory" class="org.mapfish.print.map.readers.XyzMapReader$Factory"/>
    <bean id="tms-MapReaderFactory" class="org.mapfish.print.map.readers.TmsMapReader$Factory"/>
    <bean id="vector-MapReaderFactory" class="org.mapfish.print.map.readers.VectorMapReader$Factory"/>
    <bean id="image-MapReaderFactory" class="org.mapfish.print.map.readers.ImageMapReader$Factory"/>
    <bean id="tiledGoogle-MapReaderFactory" class="org.mapfish.print.map.readers.google.GoogleMapTileReader$Factory"/>
    <bean id="google-MapReaderFactory" class="org.mapfish.print.map.readers.google.GoogleMapReader$Factory"/>
    <bean id="kaMapCache-ReaderFactory" class="org.mapfish.print.map.readers.KaMapCacheMapReader$Factory"/>
    <bean id="kaMap-ReaderFactory" class="org.mapfish.print.map.readers.KaMapMapReader$Factory"/>
    <bean id="wmts-ReaderFactory" class="org.mapfish.print.map.readers.WMTSMapReader$Factory"/>
    
    <!-- Define output factories -->
    <bean id="outputFactory" class="org.mapfish.print.output.OutputFactory">
        <property name="formatFactories">
            <list>
                <!-- Uncomment to use image magick for image output -->
                <!-- <ref bean="imageMagickOutput" />  -->
                <ref bean="fileCachingJaiMosaicOutputFactory" />
                <ref bean="inMemoryJaiMosaicOutputFactory" />
                <ref bean="pdfOutputFactory" />
            </list>
        </property>
    </bean>
    <bean id="imageMagickOutput" class="org.mapfish.print.output.NativeProcessOutputFactory">
        <!-- the path and command of the process to use for converting the pdf to another format.
             The normal configuration is for imagemagick  -->
        <property name="cmd">
            <value>/usr/local/convert</value>
        </property>
        <!-- The arguments to use when running an imagemagick process -->
        <property name="cmdArgs">
            <list>
                <value>-density</value>
                <value>@@dpi@@</value>
                <value>-append</value>
                <value>@@sourceFile@@</value>
                <value>@@targetFile@@</value>
            </list>
        </property>
        <!-- Formats supported by the converter -->
        <property name="formats">
            <list>
                <value>jpg</value>
                <value>png</value>
                <value>tif</value>
                <value>tiff</value>
                <value>gif</value>
                <value>bmp</value>
            </list>
        </property>
        <!-- The number of concurrent processes to run.  Extra processes will wait their turn  -->
        <constructor-arg>
            <value>10</value>
        </constructor-arg>
        <!-- the length of time to wait for a process to be available before giving up -->
        <property name="timeoutSeconds">
            <value>30</value>
        </property>
    </bean>
    <bean id="fileCachingJaiMosaicOutputFactory" class="org.mapfish.print.output.FileCachingJaiMosaicOutputFactory"/>
    <bean id="inMemoryJaiMosaicOutputFactory" class="org.mapfish.print.output.InMemoryJaiMosaicOutputFactory"/>
    <bean id="pdfOutputFactory" class="org.mapfish.print.output.PdfOutputFactory"/>
</beans>