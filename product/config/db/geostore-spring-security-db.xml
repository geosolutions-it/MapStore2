<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:cxf="http://cxf.apache.org/core"
    xmlns:jaxws="http://cxf.apache.org/jaxws"
    xmlns:jaxrs="http://cxf.apache.org/jaxrs" xsi:schemaLocation="
            http://www.springframework.org/schema/beans     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://cxf.apache.org/jaxws                     http://cxf.apache.org/schemas/jaxws.xsd
            http://cxf.apache.org/jaxrs                     http://cxf.apache.org/schemas/jaxrs.xsd
            http://cxf.apache.org/core                      http://cxf.apache.org/schemas/core.xsd
            http://www.springframework.org/schema/security  http://www.springframework.org/schema/security/spring-security.xsd
            http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context-3.0.xsd" default-autowire="byName">

    <!-- ==================================================================== -->
    <!-- === REST Security ================================================== -->
    <!-- ==================================================================== -->
    <security:global-method-security secured-annotations="enabled" />

    <security:http auto-config="true" create-session="never">
        <security:http-basic entry-point-ref="restAuthenticationEntryPoint"/>
        <security:csrf disabled="true"/>
        <security:custom-filter ref="authenticationTokenProcessingFilter" before="FORM_LOGIN_FILTER"/>
        <security:custom-filter ref="sessionTokenProcessingFilter" after="FORM_LOGIN_FILTER"/>
        <security:custom-filter ref="keycloakFilter" before="BASIC_AUTH_FILTER"/>
        <security:custom-filter ref="googleOpenIdFilter" after="BASIC_AUTH_FILTER"/>
        <security:anonymous />
    </security:http>

    <!-- Entry point -->
    <bean id="restAuthenticationEntryPoint" class="it.geosolutions.geostore.services.rest.security.RestAuthenticationEntryPoint">
        <property name="realmName" value="GeoStore"></property>
    </bean>
    <!-- GeoStore Auth Provider -->
    <bean id="geoStoreUserServiceAuthenticationProvider" class="it.geosolutions.geostore.services.rest.security.UserServiceAuthenticationProvider">
    </bean>

    <bean class="it.geosolutions.geostore.services.rest.security.UserAttributeTokenAuthenticationFilter" id="authenticationTokenProcessingFilter">
    </bean>

    <bean class="it.geosolutions.geostore.services.rest.security.SessionTokenAuthenticationFilter" id="sessionTokenProcessingFilter">
    </bean>

    <!-- Inject into the Authentication Manager the GeoStore Auth Provider -->
    <security:authentication-manager>
        <security:authentication-provider ref='geoStoreUserServiceAuthenticationProvider' />
    </security:authentication-manager>


    <bean id="preauthenticatedAuthenticationProvider" class="it.geosolutions.geostore.services.rest.security.PreAuthenticatedAuthenticationProvider">
    </bean>

    <!-- OAuth2 beans -->
    <context:annotation-config/>

    <bean id="googleSecurityConfiguration" class="it.geosolutions.geostore.services.rest.security.oauth2.google.OAuthGoogleSecurityConfiguration"/>

    <!-- Keycloak -->

    <bean id="keycloakConfig" class="it.geosolutions.geostore.services.rest.security.keycloak.KeyCloakSecurityConfiguration"/>

    <!-- END OAuth2 beans-->

    <!--  security itegration inclusions  -->
    <import resource="classpath*:security-integration-${security.integration:default}.xml"/>

</beans>
