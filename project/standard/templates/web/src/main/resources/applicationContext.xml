<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"

	   xmlns:cxf="http://cxf.apache.org/core"
	   xmlns:jaxws="http://cxf.apache.org/jaxws"
       xmlns:jaxrs="http://cxf.apache.org/jaxrs"

       xsi:schemaLocation="
            http://www.springframework.org/schema/beans     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://cxf.apache.org/jaxws                     http://cxf.apache.org/schemas/jaxws.xsd
            http://cxf.apache.org/jaxrs                     http://cxf.apache.org/schemas/jaxrs.xsd
            http://cxf.apache.org/core                      http://cxf.apache.org/schemas/core.xsd
            http://www.springframework.org/schema/context   http://www.springframework.org/schema/context/spring-context-3.0.xsd"
       default-autowire="byName">

    <context:annotation-config />

    <bean id="geostoreInitializer" class="it.geosolutions.geostore.init.GeoStoreInit" lazy-init="false">
        <!-- Site specific initialization. Please specify a path in the ovr file-->
        <!--<property name="userListInitFile"><null/></property>-->
        <property name="userListInitFile" value="classpath:sample_users.xml"/>
        <!-- Site specific initialization. Please specify a path in the ovr file-->
        <property name="categoryListInitFile" value="classpath:sample_categories.xml" />

        <!-- Site specific initialization. Please specify a path in the ovr file-->
        <property name="userGroupListInitFile" value="classpath:sample_groups.xml" />
        <!-- The default password encoder -->
        <property name="passwordEncoder" ref="${passwordEncoderUsed}"></property>
    </bean>

    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="order" value="0"/>
        <property name="locations">
            <list>
                <value>classpath:geostore.properties</value>
                <value>classpath*:geostore.properties</value>
                <value>classpath:mapstore.properties</value>
                <value>classpath:ldap.properties</value>
                <value>file:${datadir.location:}/mapstore.properties</value>
                <value>file:${datadir.location:}/ldap.properties</value>
            </list>
        </property>
        <property name="ignoreResourceNotFound" value="true"/>
    </bean>
    <!-- Allows getting database configuration also from the data-dir -->
    <bean class="org.springframework.beans.factory.config.PropertyOverrideConfigurer">
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="order" value="10"/>
        <property name="locations">
            <list>
                <value>classpath:mapstore-ovr.properties</value>
                <value>file:${datadir.location:}/geostore-datasource-ovr.properties</value>
                <value>file:${datadir.location:}/mapstore-ovr.properties</value>
            </list>
        </property>
    </bean>
</beans>
